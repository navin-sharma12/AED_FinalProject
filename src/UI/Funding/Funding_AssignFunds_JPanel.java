/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Funding;

import Investor.Investor;
import Student.Student;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JPanel;

/**
 *
 * @author richapatel
 */
public class Funding_AssignFunds_JPanel extends javax.swing.JPanel {

    /**
     * Creates new form Funding_AssignFunds_JPanel
     */
    public Funding_AssignFunds_JPanel(JPanel controlArea, JPanel workArea) {
        initComponents();

        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFunder = new javax.swing.JTable();
        ComboxFunderType = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Firstname", "Lastname", "Gender", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblStudent);

        tblFunder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Type", "Username", "Funds"
            }
        ));
        jScrollPane2.setViewportView(tblFunder);

        ComboxFunderType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Local", "Government" }));

        jButton1.setText("Fetch");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ComboxFunderType, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAdd))
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE))
                        .addGap(357, 357, 357))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboxFunderType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdd)
                .addGap(11, 11, 11))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblStudent.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a from Student Table row");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblStudent.getModel();
        populateInvestor();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblStudent.getSelectedRow();
        int selectedRowIndex1 = tblFunder.getSelectedRow();
        if (selectedRowIndex < 0  ) {
            JOptionPane.showMessageDialog(this, "Please select a  both tables row");
            return;
        }
        if(selectedRowIndex1 < 0)
        {
         JOptionPane.showMessageDialog(this, "Please select a from both tables row");
          return;
        }
        DefaultTableModel model = (DefaultTableModel) tblStudent.getModel();
        DefaultTableModel model1 = (DefaultTableModel) tblFunder.getModel();
        int funds_pending = Integer.parseInt(model1.getValueAt(selectedRowIndex1, 3).toString());
        System.out.println(funds_pending);
        if (funds_pending > 0) {
            int student_id = Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString());
            int funder_id = Integer.parseInt(model1.getValueAt(selectedRowIndex1, 0).toString());
            int funds = Integer.parseInt(model1.getValueAt(selectedRowIndex1, 3).toString()) - 100;
            Investor in = new Investor();
            Student s_funds = new Student();
            try {
                in.updateInvestorFunds(funds, funder_id);
                s_funds.updateFundsInStudent(student_id, funder_id);
                JOptionPane.showMessageDialog(this, "Funds Assigned");
                populateTable();
                populateInvestor();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
            

        } 
        else {
            JOptionPane.showMessageDialog(this, "No funds ");
        }


    }//GEN-LAST:event_btnAddActionPerformed
    public void populateInvestor() {

        if (ComboxFunderType.getSelectedItem().toString().equals("Local")) {
            Investor in = new Investor();
            DefaultTableModel model1 = (DefaultTableModel) tblFunder.getModel();
            model1.setRowCount(0);
            try {
                ResultSet rs_local = in.getAllLocalInvestor();
                while (rs_local.next()) {
                    Object[] row = new Object[4];
                    row[0] = rs_local.getInt(1);
                    row[1] = "Local";
                    row[2] = rs_local.getString(10);
                    row[3] = rs_local.getString(11);
                    model1.addRow(row);

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }

        } else {
            Investor in_new = new Investor();
            DefaultTableModel model2 = (DefaultTableModel) tblFunder.getModel();
            model2.setRowCount(0);
            try {
                ResultSet rs_government = in_new.getAllGovernmentInvestor();
                while (rs_government.next()) {
                    Object[] row = new Object[4];
                    row[0] = rs_government.getInt(1);
                    row[1] = "Government";
                    row[2] = rs_government.getString(10);
                    row[3] = rs_government.getString(11);
                    model2.addRow(row);

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboxFunderType;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblFunder;
    private javax.swing.JTable tblStudent;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblStudent.getModel();
            model.setRowCount(0);
            Student student = new Student();
            ResultSet rs = student.getStudentWithFundingPending();

            while (rs.next()) {
                Object[] row = new Object[5];
                row[0] = rs.getInt(1);
                row[1] = rs.getString(2);
                row[2] = rs.getString(3);
                row[3] = rs.getString(4);
                row[4] = rs.getString(5);
                model.addRow(row);

            }
//            empty all dropdown

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
}
